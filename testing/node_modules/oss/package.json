{
  "_args": [
    [
      "oss",
      "/home/lola/JavaScriptTraining/petApp"
    ]
  ],
  "_from": "oss@latest",
  "_id": "oss@0.0.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/oss",
  "_npmUser": {
    "email": "fantasyni@163.com",
    "name": "fantasyni"
  },
  "_npmVersion": "1.1.59",
  "_phantomChildren": {},
  "_requested": {
    "name": "oss",
    "raw": "oss",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/oss/-/oss-0.0.1.tgz",
  "_shasum": "e6fc63557bdf58e4128ebc951f6f87e52de707b8",
  "_shrinkwrap": null,
  "_spec": "oss",
  "_where": "/home/lola/JavaScriptTraining/petApp",
  "author": {
    "email": "fantasyni@163.com",
    "name": "fantasyni"
  },
  "dependencies": {
    "async": ">0.0.1",
    "commander": ">0.0.1",
    "data2xml": "*",
    "mime": "*",
    "ndir": "0.1.2",
    "oppressor": "*",
    "progress": ">0.0.1",
    "request": ">0.0.1",
    "xml2js": "*"
  },
  "description": "Aliyun OSS node.js SDK and Command-Line Tool",
  "devDependencies": {
    "mocha": ">=0.14.1",
    "should": ">=0.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "e6fc63557bdf58e4128ebc951f6f87e52de707b8",
    "tarball": "https://registry.npmjs.org/oss/-/oss-0.0.1.tgz"
  },
  "keywords": [
    "aliyun oss node.js sdk command line "
  ],
  "main": "./lib/oss.js",
  "maintainers": [
    {
      "name": "fantasyni",
      "email": "fantasyni@163.com"
    }
  ],
  "name": "oss",
  "optionalDependencies": {},
  "private": false,
  "readme": "#OSS\nOSS is a [node.js](http://nodejs.org) SDK and Command-Line Tool for [Aliyun OSS](http://www.aliyun.com/product?type=oss)  \n\n#Support API  \n+ service operation  \n+ bucket operation \n+ object operation  \n+ multipart upload operation  \n+ object group operation  \n  \nmore api infomations you can see [oss_api](http://storage.aliyun.com/aliyun_portal_storage/oss_api/OSS_API.zip)  \n\n#Install  \nnpm install oss  \n\n#Usage  \nall api functions have the same style as showed below  \n  \n<pre>\n   var oss = require('oss');  \n   var client = new oss({\n       accessId : xxx,\n       accessKey xxx: \n   });\n   var options = {\n       bucket : \"test\"\n   }\n   client.create_bucket(options,function(err,result){\n       if(err) throw err;\n       // operation result\n       console.log(result);\n   });\n</pre>\n\nyou can configue the options object to make your oss request , it is really simple !!!  \n\n#Command Line  \nfirst you must configure the key.js file to add your access_id and access_key  \nthen put oss/bin/ to your system PATH then you can use oss command line directly  \ntype oss -h you can get the help infomation showed below\n<pre>\n    Usage: oss [options]\n\n  Options:\n\n    -h, --help                       output usage information\n    -V, --version                    output the version number\n    -v, --version                    output the version number\n    -p, --putbucket                  create a new bucket\n    -l, --listbucket                 list buckets\n    -s, --setacl                     set bucket acl\n    -L, --listobject                 list objects\n    -g, --getacl                     get bucket acl\n    -d, --deletebucket               delete bucket\n    -P, --putobject                  simple put object to oss\n    -G, --getobject                  get object from oss to local dstFile\n    -C, --copyobject                 copy object in oss\n    -H, --headobject                 get object meta info\n    -D, --deleteobject               delete object in oss\n    -x, --deleteobjects              delete objects in oss\n    -m, --multiputobject             multipart upload object to oss\n    -S, --listmultiput               list multipart uploads\n    -n, --group                      post object group\n    -u, --uploaddir                  upload local dir files to a oss dir in a bucket\n    -U, --syncdir                    sync local dir files to a oss dir in a bucket\n    -c, --copyright                  show oss command line copyright\n</pre>\n#Examples  \nyou can visit test file to get more examples\n\n#Some Features  \n+ compress upload  \nwhen put object you can set options gzip : true to use compress upload\n<pre>  \n  oss.put_object( {  bucket : \"fni_te\", object : \"node-demos.tar.gz\" , srcFile : \"/home/fantasyni/node-demos.tar.gz\" ,gzip : true},function(err,results){\n\t\tif(err) throw err;\n\t\tconsole.log(results);\n\t}\n);\n</pre>\n\n+ upload_objects_by_dir  \nyou can upload local dir files to oss  \nlocal dir path support relative path  and absolute path of course  \n<pre>\n oss.upload_objects_by_dir({ bucket:\"fni_oss1\", ossDir:\"test3\", local:\".\" },function(err,results){\n  console.log(results);\n });\n</pre>\n\n+ sync_local_dir  \nsimilar to upload_objects_by_dir the differene is the dir will also be created in oss  \n<pre>\n oss.sync_local_dir({ bucket:\"fni_oss1\", ossDir:\"test2\", local:\".\" },function(err,results){\n  console.log(results);\n });\n</pre> \n\n",
  "scripts": {
    "test": "make test"
  },
  "version": "0.0.1"
}
